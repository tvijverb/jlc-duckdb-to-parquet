name: Tests and release

on:
  push:
    tags:
      - "v*.*.*"
env:
  CRATE_NAME: jlc-duckdb-to-parquet
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1

jobs:
  cross-build-and-release:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64-gnu
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin: jlc-duckdb-to-parquet
            name: jlc-duckdb-to-parquet-Linux-x86_64-gnu.tar.gz
          - os_name: Linux-aarch64-unknown-linux-gnu
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            bin: jlc-duckdb-to-parquet
            name: jlc-duckdb-to-parquet-Linux-aarch64-gnu.tar.gz
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: jlc-duckdb-to-parquet.exe
            name: jlc-duckdb-to-parquet-Windows-x86_64.zip
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: jlc-duckdb-to-parquet
            name: jlc-duckdb-to-parquet-Darwin-aarch64.tar.gz
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Configure Git
        run: |
          git config --global user.email "jdoe@example.com"
          git config --global user.name "J. Doe"

      - name: Install g++ on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes g++
        if: contains(matrix.platform.name, 'linux')

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jlc-duckdb-to-parquet-${{ matrix.platform.os_name }}
          path: "jlc-duckdb-to-parquet-*"

      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }}

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: "jlc-duckdb-to-parquet-*"
        # if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )